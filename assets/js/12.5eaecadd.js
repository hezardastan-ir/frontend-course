(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{221:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"بررسی-هویت-کاربر-و-ارسال-پست"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#بررسی-هویت-کاربر-و-ارسال-پست"}},[e._v("#")]),e._v(" بررسی هویت کاربر و ارسال پست")]),e._v(" "),r("h2",{attrs:{id:"مقدمه"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#مقدمه"}},[e._v("#")]),e._v(" مقدمه")]),e._v(" "),r("p",[e._v("هر برنامه محتوا محوری، شامل یک سری داده هست که به هر کدوم یک مدل گفته میشه. برای هر مدل، چهار عملیات ساخت(Create)، خواندن(Read)، بروز رسانی(Update) و حذف(Delete) تعریف میشه که به اختصار CRUD گفته میشه.")]),e._v(" "),r("p",[e._v("تا اینجای کار، فقط به خواندن مدل‌هامون (پست و کامنت) پرداختیم. تو این قسمت، می‌خوایم به ساخت یک پست بپردازیم. بدین منظور، باید به کاربران سایتمون اجازه ساخت اکانت بدیم تا هویتشون رو برای ایجاد پست جدید (یا باقی عملیات ویرایش داده‌ای) تشخیص بدیم.")]),e._v(" "),r("h2",{attrs:{id:"صفحه-signup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#صفحه-signup"}},[e._v("#")]),e._v(" صفحه Signup")]),e._v(" "),r("p",[e._v("این صفحه یک فرم داره که شامل چهار فیلد زیر هست:")]),e._v(" "),r("ul",[r("li",[e._v("Title")]),e._v(" "),r("li",[e._v("Username")]),e._v(" "),r("li",[e._v("Password")]),e._v(" "),r("li",[e._v("Confirm password")]),e._v(" "),r("li",[e._v("Email")])]),e._v(" "),r("p",[e._v("حین تایپ کردن کاربر توی فیلد username باید بهش بفهمونیم که آیا می‌تونه از username استفاده کنه یا نه. با تایپ کردن username ریکوئست می‌زنیم به بک‌اند و اگر استفاده از اون استرینگ ممکن بود یا نبود، بهش فیدبک مناسب میدیم. برای این ریکوئست از api زیر استفاده کن:")]),e._v(" "),r("p",[r("code",[e._v("localhost:3000/users/[username]")])]),e._v(" "),r("p",[e._v("فیلد‌های password و confirm password باید یکسان وارد بشن: از لحظه‌ای که کاربر شروع کرد به وارد کردن confirm password تا لحظه‌ای که مقدار این فیلد با فیلد password یکی نیست، باید فیدبک مناسب بهش بدیم و وقتی که یکی بود هم، همین‌طور.")]),e._v(" "),r("p",[e._v("فیلد email باید valid باشه و باید فیدبک مناسب به کاربر داده‌بشه.")]),e._v(" "),r("p",[e._v("پس از این که همه فیلد ها وارد شدند، دکمه Signup پایین صفحه فعال میشه و در صورت کلیک شدن، ریکوئستی شامل username، password و email و title به سرور ارسال می‌شه و اگه همه‌ چی اوکی باشه، کاربر لاگین میشه و به صفحه home هدایت میشه. برای ایجاد کاربر ریکوئست Post به آدرس زیر بفرست:")]),e._v(" "),r("p",[r("code",[e._v("localhost:3000/users")])]),e._v(" "),r("p",[e._v("قبل از شروع پیاده سازی، مستندات سایت React در مورد "),r("a",{attrs:{href:"https://reactjs.org/docs/forms.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("فرم‌ها"),r("OutboundLink")],1),e._v("، کار با "),r("a",{attrs:{href:"https://reactjs.org/docs/handling-events.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("رخداد"),r("OutboundLink")],1),e._v(" ها و "),r("a",{attrs:{href:"https://reactjs.org/docs/uncontrolled-components.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("کمپوننت‌های کنترل‌نشده"),r("OutboundLink")],1),e._v(" رو بخون.")]),e._v(" "),r("p",[e._v("برای این صفحه، Route جدیدی تعریف کن که شامل header صفحات قبلی، و این فرم باشه.")]),e._v(" "),r("h2",{attrs:{id:"صفحه-login"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#صفحه-login"}},[e._v("#")]),e._v(" صفحه login")]),e._v(" "),r("p",[e._v("شامل فیلد‌های username و password هست، و در صورتی که اطلاعات وارد شده توسط سرور تایید بشن، کاربر باید لاگین بیشه و به صفحه خانه برگرده. برای بررسی درستی اطلاعات کاربر و گرفتن token، به api زیر ریکوئست post بزن و username و password رو توی یه json بفرست:")]),e._v(" "),r("p",[r("code",[e._v("localhost:3000/sessions")])]),e._v(" "),r("h3",{attrs:{id:"شناسایی-کاربران-پس-از-ورود-یا-ثبت‌نام"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#شناسایی-کاربران-پس-از-ورود-یا-ثبت‌نام"}},[e._v("#")]),e._v(" شناسایی کاربران پس از ورود یا ثبت‌نام")]),e._v(" "),r("p",[e._v("همون‌طور که می‌دونید، پروتکل http، توجهی به وضعیت کلاینت نداره و به اصطلاح stateless هست. بدین معنی که اگر در ریکوئست http اول، هویت کاربر تصدیق بشه، در ریکوئست دوم، اطلاعاتی از ریکوئست قبلی در دست نیست و سرور نمی‌دونه که داره با کدوم کلاینت صحبت می‌کنه. برای حل این مشکل، راه‌حل های زیادی وجود داره که از جمله اونها میشه به basic authentication، استفاده از cookie ها، استفاده از token ها، و … اشاره کرد. این "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication",target:"_blank",rel:"noopener noreferrer"}},[e._v("لینک"),r("OutboundLink")],1),e._v(" رو برای اطلاعات بیشتر راجع به authentication بخون. یکی از روش های رایج در Single Page Application ها، استفاده از jwt token هست که یک‌بار توسط سرور ساخته‌میشه و از اون پس هر بار کاربر اون رو به همراه بقیه محتوای requestاش به سرور ارسال می‌کنه. با این روش، سرور با هر ریکوئستی می‌تونه دوباره هویت کاربر رو بررسی کنه. برای یادگیری جزییات بیشتر این روش می‌تونی "),r("a",{attrs:{href:"https://jwt.io/introduction/",target:"_blank",rel:"noopener noreferrer"}},[e._v("اینجا"),r("OutboundLink")],1),e._v(" رو بخونی.")]),e._v(" "),r("p",[e._v("Token ایجاد شده توسط سرور، به کلاینت ارسال میشه و کلاینت اون رو داخل localStorage ذخیره می‌کنه. ریکوئست‌های بعدی شامل http-headerای هستند که به این شکل هست:")]),e._v(" "),r("p",[r("code",[e._v("Authorization: Bearer <token>")])]),e._v(" "),r("h2",{attrs:{id:"افزودن-پست"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#افزودن-پست"}},[e._v("#")]),e._v(" افزودن پست")]),e._v(" "),r("p",[e._v("در صفحه home، برای کاربری که لاگین کرده، قسمتی ایجاد کن که شامل یک باکس خالی برای نوشتن عنوان پست، و یک باکس بزرگ‌تر برای نوشتن متن پست داشته‌باشه.")]),e._v(" "),r("p",[e._v("سایر فیچر‌های این قسمت، به شکل زیر هست:")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("در صورتی که ارتفاع متن نوشته‌شده توسط کاربر، از ارتفاع تعبیه شده برای این فیلد بیشتر باشه، نباید به اون فیلد اسکرول اضافه بشه، بلکه باید طول فیلد هم افزایش پیدا کنه.")])]),e._v(" "),r("li",[r("p",[e._v("در صورتی که کاربر ctrl + enter رو می‌زنه، پست ارسال میشه به سرور (دکمه Send new post هم همین کار رو می‌کنه)")])]),e._v(" "),r("li",[r("p",[e._v("اطلاعاتی که به سرور می‌فرستی شامل موارد زیر هست:")]),e._v(" "),r("ul",[r("li",[e._v("توکن jwt در هدر مربوطه.")]),e._v(" "),r("li",[e._v("هدر تعیین کننده نوع اطلاعات فرستاده شده به سرور (json)")]),e._v(" "),r("li",[e._v("اطلاعات پست (به صورت json) شامل:\n"),r("ul",[r("li",[e._v("title")]),e._v(" "),r("li",[e._v("body")]),e._v(" "),r("li",[e._v("date")])])])])]),e._v(" "),r("li",[r("p",[e._v("این پست به endpoint گرفتن لیست پست‌ها ریکوئست می‌زنه، منتها با متد POST.")])]),e._v(" "),r("li",[r("p",[e._v("وقتی پست جدید ثبت شد، ریسپانس سرور شامل همه اطلاعات پست خواهد بود. این پست رو بدون گرفتن لیست دوباره پست‌ها، به صفحه اضافه کن.")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);
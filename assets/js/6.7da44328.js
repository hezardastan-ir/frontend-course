(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{211:function(e,r,t){e.exports=t.p+"assets/img/layout-1.059025e7.png"},212:function(e,r,t){e.exports=t.p+"assets/img/layout-2.944871ec.png"},229:function(e,r,t){"use strict";t.r(r);var n=t(0),o=Object(n.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"صفحه‌آرایی-layout"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#صفحه‌آرایی-layout"}},[e._v("#")]),e._v(" صفحه‌آرایی (Layout)")]),e._v(" "),n("h2",{attrs:{id:"مقدمه"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#مقدمه"}},[e._v("#")]),e._v(" مقدمه")]),e._v(" "),n("p",[e._v("به چیدمان و سازمان‌دهی المنت‌ها در صفحه وب، صفحه‌آرایی یا Layout گفته میشه. مثلا اینکه صفحه وب شامل یک ستون ثابت در سمت راست باشه و یا Header و Footer داشته باشه. یا اینکه در حالت‌های مختلف، المنت‌ها چطور نمایش داده بشن و چطور کنار هم قرار بگیرن. برای پیاده‌سازی یک Layout، معمولا به صفحه از بیرون به داخل نگاه می‌کنیم.")]),e._v(" "),n("p",[e._v("برای مثال: با شروع از بیرونی‌ترین تقسیم‌بندی، فرض می‌کنیم یک قسمت ثابت در بالای صفحه داریم و ۳ ستون با عرض‌های مختلف در داخل صفحه. بعد در هر قسمت جزییات مرحله بعدی رو مشخص می‌کنیم. و این کار رو تا جایی ادامه می‌دیم که تمام جزییات داخل صفحه رو شامل بشه. برای نمونه "),n("a",{attrs:{href:"http://slides.com/hashem/css-102#/9",target:"_blank",rel:"noopener noreferrer"}},[e._v("اینجا"),n("OutboundLink")],1),e._v(" رو ببینید.")]),e._v(" "),n("p",[e._v("برای تقسیم‌بندی صفحه گاهی از یک سری Container Element استفاده می‌کنیم. در گذشته از تگ "),n("code",[e._v("<div>")]),e._v(" به عنوان یک "),n("a",{attrs:{href:"https://css-tricks.com/best-way-implement-wrapper-css/#article-header-id-3",target:"_blank",rel:"noopener noreferrer"}},[e._v("Generic Container"),n("OutboundLink")],1),e._v(" استفاده می‌کردیم ولی امروزه در مواردی که کاربرد اون صحیح باشه، ممکنه از تگ‌های جدید مثل "),n("code",[e._v("<main>")]),e._v(", "),n("code",[e._v("<section>")]),e._v(", "),n("code",[e._v("<article>")]),e._v(" و ... در کنار "),n("code",[e._v("<div>")]),e._v(" استفاده کنیم و بهشون استایل بدیم تا صفحه مورد نظرمون رو بسازیم.")]),e._v(" "),n("p",[e._v("اما پیش از شروع صفحه‌آرایی خوبه که استایل‌هایی که مرورگرهای وب بطور پیش‌فرض اعمال می‌کنن رو ریست یا نرمالایز کنیم.")]),e._v(" "),n("h2",{attrs:{id:"css-reset-normalizing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css-reset-normalizing"}},[e._v("#")]),e._v(" CSS Reset / Normalizing")]),e._v(" "),n("p",[e._v("در بخش قبلی در Cascading Order دیدیم که مرورگرهای وب به المنت‌ها استایل پیش‌فرض اعمال می‌کنن. برای اطمینان از اینکه صفحات وبی که ایجاد می‌کنیم روی تمام مرورگر‌ها به شکل یکسان نمایش داده بشه، در گذشته از روشی به اسم "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Reset_style_sheet",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSS Reset"),n("OutboundLink")],1),e._v(" استفاده می‌شد. تاریخچه CSS Reset مفصله و اگر خواستی در "),n("a",{attrs:{href:"https://www.webfx.com/blog/web-design/the-history-of-css-resets/",target:"_blank",rel:"noopener noreferrer"}},[e._v("اینجا"),n("OutboundLink")],1),e._v(" می‌تونید درباره‌اش بخونی.")]),e._v(" "),n("p",[e._v("با گذشت زمان، روش‌های دیگه‌ای برای این نیاز ارائه شدن. یکی از اونها ‌‌Normalize.css بود. تفاوت این روش در اینه که در "),n("a",{attrs:{href:"https://meyerweb.com/eric/tools/css/reset/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reset"),n("OutboundLink")],1),e._v(" تمام استایل‌های پیش‌فرض تقریبا از بین می‌ره و توسعه‌دهنده باید به همه‌ی المنت‌ها استایل بده (مثلا لیست‌ها دیگه شامل bullet point نبودن) ولی در Normalize استایل‌های مشخصی به المنت‌ها داده می‌شه که ماهیت اون‌ها رو نمایش بده ولی از شیوه نمایش یکسان اون‌ها هم اطمینان حاصل بشه.")]),e._v(" "),n("p",[e._v("معمولا این استایل‌ها رو پیش از استایل‌های اصلی صفحه قرار می‌دن تا در نقطه شروع، استایل‌ المنت‌ها یک وضعیت مشخص برسه. برای آشنایی این "),n("a",{attrs:{href:"https://css-tricks.com/reboot-resets-reasoning/",target:"_blank",rel:"noopener noreferrer"}},[e._v("لینک"),n("OutboundLink")],1),e._v(" رو بخون.")]),e._v(" "),n("h2",{attrs:{id:"روش‌های-صفحه‌آرایی"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#روش‌های-صفحه‌آرایی"}},[e._v("#")]),e._v(" روش‌های صفحه‌آرایی")]),e._v(" "),n("ul",[n("li",[e._v("در گذشته از "),n("strong",[n("code",[e._v("float")])]),e._v(" برای ایجاد ستون‌ها استفاده می‌شد در حالی که برای این‌ کار ایجاد نشده بود و مشکلاتی داشت (به بخش قبلی دوره مراجعه کن). اما در هر صورت بهتر از استفاده از "),n("code",[e._v("<table>")]),e._v(" برای صفحه‌آرایی بود 😃")]),e._v(" "),n("li",[e._v("همچنان در گذشته (و شاید حال، در مواردی) از "),n("code",[e._v("display: inline-block")]),e._v(" برای قرار دادن ستون‌ها در کنار هم استفاده می‌شد. اما این روش هم مشکلاتی داشت که می‌تونی "),n("a",{attrs:{href:"https://css-tricks.com/fighting-the-space-between-inline-block-elements/",target:"_blank",rel:"noopener noreferrer"}},[e._v("اینجا"),n("OutboundLink")],1),e._v(" درباره‌اش بخونی.")]),e._v(" "),n("li",[e._v("از "),n("code",[e._v("position")]),e._v(" برای قراردادن المنت‌ها نسبت به جایی از صفحه نمایش یا سایر المنت‌ها استفاده می‌شه.")]),e._v(" "),n("li",[e._v("امروزه برای ایجاد سطر و ستون‌ها از Flexbox و Grid استفاده می‌شه.")])]),e._v(" "),n("p",[e._v("برای آشنایی بیشتر "),n("a",{attrs:{href:"http://learnlayout.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("اینجا"),n("OutboundLink")],1),e._v(" رو ببین. همچنین این "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout",target:"_blank",rel:"noopener noreferrer"}},[e._v("لینک"),n("OutboundLink")],1),e._v(" از MDN که در بخش CSS مرور کردی، اطلاعات کامل‌تر و به‌روزتری داره. برای آشنایی با Flexbox و Grid می‌تونی از این لینک‌های جالب استفاده کنی:")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://flexboxfroggy.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flexbox"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://cssgridgarden.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Grid"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"طراحی-وب-واکنش‌گرا-responsive-web-design"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#طراحی-وب-واکنش‌گرا-responsive-web-design"}},[e._v("#")]),e._v(" طراحی وب واکنش‌گرا (Responsive Web Design)")]),e._v(" "),n("p",[e._v("طراحی وب واکنش‌گرا یا پاسخگو—که ترجمه شدهٔ عبارت Responsive Web Design (به اختصار RWD) است—یک روش پیاده‌سازی صفحات وب برای بهینه بودن در ابعاد مختلف صفحات نمایشگر مثل دسکتاپ و تبلت و موبایل و... است.")]),e._v(" "),n("p",[e._v("قبل از این روش و حتی امروزه ممکنه بنا به دلایلی برنامه‌نویسان وب نسخه‌های متفاوتی از صفحه وب رو ایجاد کنن و با تکنیک "),n("a",{attrs:{href:"https://developers.google.com/search/mobile-sites/mobile-seo/dynamic-serving",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dynamic Serving"),n("OutboundLink")],1),e._v(" یا با "),n("a",{attrs:{href:"https://developers.google.com/search/mobile-sites/mobile-seo/separate-urls",target:"_blank",rel:"noopener noreferrer"}},[e._v("آدرس‌های متفاوت"),n("OutboundLink")],1),e._v("، به مخاطب نمایش بدن.")]),e._v(" "),n("p",[e._v("این روش (با اینکه امکان اون از مدت‌ها پیش وجود داشت) "),n("a",{attrs:{href:"https://alistapart.com/article/responsive-web-design/",target:"_blank",rel:"noopener noreferrer"}},[e._v("در سال ۲۰۱۰ توسط Ethan Marcotte"),n("OutboundLink")],1),e._v(" معرفی و بعد از مدتی فراگیر شد.")]),e._v(" "),n("p",[e._v("برای مطالعه به این لینک‌ها مراجعه کن:")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.smashingmagazine.com/2011/01/guidelines-for-responsive-web-design/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Responsive Web Design - What It Is And How To Use It"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design",target:"_blank",rel:"noopener noreferrer"}},[e._v("Responsive Design on MDN"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developers.google.com/web/fundamentals/design-and-ux/responsive",target:"_blank",rel:"noopener noreferrer"}},[e._v("Responsive Design on Google Developers"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"یک-قدم-فراتر"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#یک-قدم-فراتر"}},[e._v("#")]),e._v(" یک قدم فراتر")]),e._v(" "),n("p",[e._v("با مراجعه به این "),n("a",{attrs:{href:"http://slides.com/hashem/css-102",target:"_blank",rel:"noopener noreferrer"}},[e._v("اسلاید‌"),n("OutboundLink")],1),e._v(" و لینک‌های داخل اون، موضوعات زیر رو مطالعه کن:")]),e._v(" "),n("ul",[n("li",[e._v("Containing Block and Initial Containing Block")]),e._v(" "),n("li",[e._v("Stacking Context")]),e._v(" "),n("li",[e._v("Display, Positioning & Float Relationship")])]),e._v(" "),n("h3",{attrs:{id:"تمرین"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#تمرین"}},[e._v("#")]),e._v(" تمرین")]),e._v(" "),n("ol",[n("li",[e._v("ظاهر صفحه رو به شکل زیر طراحی کن.")])]),e._v(" "),n("p",[n("img",{attrs:{src:t(211),alt:"Layout example"}})]),e._v(" "),n("p",[e._v("این تمرین رو طوری انجام بده که ستونِ سمت راست تمام ارتفاع صفحه را بگیرد و در صفحه ثابت باشد و با اسکرول عمودی جابجا نشود. افزایش محتوا در ستون سمت چپ باعث اسکرول شدن صفحه می‌شود.")]),e._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[e._v("طرح شکل زیر رو بدون استفاده از framework/libraryهای آماده بساز:")]),e._v(" "),n("ul",[n("li",[e._v("ارتفاع HEADER برابر 60px باشد.")]),e._v(" "),n("li",[e._v("ستون سمت راست با عرض 220px.")]),e._v(" "),n("li",[e._v("ستون سمت چپ باقی عرض باقی مانده در صفحه را بگیرد.")]),e._v(" "),n("li",[e._v("ببین ستون چپ و راست 30px فضای خالی باشد و هر دو ستون از HEADER برابر 30px فاصله داشته باشند.")]),e._v(" "),n("li",[e._v("ستون سمت راست (aside) از زیر HEADER شروع شده و به فوتر رسیده باشد.")]),e._v(" "),n("li",[e._v("ستون سمت چپ با افزایش محتوای درونش، باعث ایجاد اسکرول بار عمودی در صفحه شود.")])])])]),e._v(" "),n("p",[n("img",{attrs:{src:t(212),alt:"Layout example"}})]),e._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[e._v("تمرین قبل را طوری انجام بده که عرض HEADER و بخش‌های زیرین برابر تمام عرض مرورگر باشد اما در هر صورت از ۶۰۰px کمتر نشود.")])]),e._v(" "),n("li",[n("p",[e._v("در تمرین قبل، ستون سمت راست (ASIDE) رو به ۲ سطر تقسیم کن. سطر اول رو A و سطر دوم رو B نام‌گذاری می‌کنیم. کاری کن که در حالت موبایل (برای مثال نمایشگر با عرض کمتر مساوی ۷۶۷ پیکسل)، همه قسمت‌ها زیر هم قرار بگیرن، به این ترتیب که در ابتدا HEADER و بعد A و بعد ستون CONTENT و بعد B و در انتها FOOTER قرار داشته باشه.")])])])])}),[],!1,null,null,null);r.default=o.exports}}]);